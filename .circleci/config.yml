version: 2.1

jobs:

  build:
    docker:
      - image: circleci/php:7.3-stretch-node-browsers
        environment:
          SETUP: stable
#           REDIS_HOST: redis
#           REDIS_PORT: 6379
      - image: circleci/mysql:5.7
#         command: [--default-authentication-plugin=mysql_native_password]
        environment:          
#           MYSQL_ROOT_PASSWORD: ""
#           MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
          MYSQL_DATABASE: forge
      - image: memcached
      - image: circleci/redis:4
    environment:
      SETUP: stable
#       REDIS_HOST: redis
#       REDIS_PORT: 6379
    working_directory: ~/laravel
    steps:
      - checkout
      - run: sudo apt update && sudo apt install zlib1g-dev libsqlite3-dev libmemcached-dev memcached
      - run: sudo docker-php-ext-install zip
      - run: sudo docker-php-ext-install bcmath && sudo docker-php-ext-enable bcmath      
      - run: sudo docker-php-ext-install pdo_mysql
      # - run: sudo phpenv config-rm xdebug.ini || true      
      - run: printf "\n" | sudo pecl install -f memcached-3.1.3
      - run: printf "\n" | sudo pecl install -f redis-4.3.0
#       - run: echo "extension = memcached.so" >> /opt/circleci/php/$(phpenv global)/etc/php.ini
#       - run: echo -e "[Date]\ndate.timezone = UTC" | sudo tee /usr/local/etc/php/php.ini > /dev/null
      - run: echo "extension = memcached.so" | sudo tee -a /usr/local/etc/php/php.ini > /dev/null
      - run: echo "extension = redis.so" | sudo tee -a /usr/local/etc/php/php.ini > /dev/null
      - run: echo "extension = pcntl.so" | sudo tee -a /usr/local/etc/php/php.ini > /dev/null
      - run: sudo composer self-update
#       - mysql -e 'CREATE DATABASE forge;'
      - restore_cache:
          key: composer
      - run: composer update --prefer-dist --no-interaction --prefer-stable --no-suggest
      - save_cache:
          key: composer
          paths:
            - ~/.composer/cache
      # - run: touch storage/testing.sqlite 
      # - run: php artisan migrate --env=testing --database=sqlite_testing --force
#       - run: sudo service memcached status || true
#       - run: sudo service memcached start
#       - run:
#           # Our primary container isn't MYSQL so run a sleep command until it's ready.
#           name: Waiting for MySQL to be ready
#           command: |
#             for i in `seq 1 10`;
#             do
#             nc -z 127.0.0.1 3306 && echo Success && exit 0
#             echo -n .
#             sleep 1
#             done
#             echo Failed waiting for MySQL && exit 1
      - run: vendor/bin/phpunit -d memory_limit=512M
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples   

workflows:
  version: 2
  build:
    jobs:
      - build
